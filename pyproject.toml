# see documentation, e.g.
# - https://packaging.python.org/en/latest/specifications/declaring-project-metadata/#declaring-project-metadata
# - https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html
# - https://www.python.org/dev/peps/pep-0621/

[build-system]
requires = ["setuptools>=64.0.0", "setuptools-scm[toml]>=8", "wheel", "build"]
build-backend = "setuptools.build_meta"

[project]
name = "excel2tulipa"
description = "Import Excel data to DuckDB for Tulipa"
authors = [
    { name = "Suvayu Ali", email = "s.ali@esciencecenter.nl" }
]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
keywords = [
    "pandas",
    "duckdb",
    "tulipa",
    "data import",
]
license = {file = "LICENSE"}
readme = {file = "README.md", content-type = "text/markdown"}
dynamic = ["version"]
requires-python = ">=3.11"
dependencies = [
    "duckdb",
    "pandas[performance]",
    "rich",
    "tabulate"
]

[project.optional-dependencies]
dev = [
    "mypy",
    "pytest",
    "pytest-cov",
]

[project.urls]
Repository = "https://github.com/TulipaEnergy/excel2tulipa"
Issues = "https://github.com/TulipaEnergy/excel2tulipa/issues"

[tool.setuptools_scm]
version_file = "excel2tulipa/_version.py"
# default: guess-next-dev, alternatives: post-release, no-guess-dev
version_scheme = "release-branch-semver"

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = ["--import-mode=importlib", "--cov=excel2tulipa", "-q"]

[tool.coverage.run]
omit = ["excel2tulipa/_version.py"]

[tool.black]
include = '\.pyi?$'
extend-exclude ='''
(
  ^tests/data
)
'''

[tool.mypy]
ignore_missing_imports = true
check_untyped_defs = true
files = "excel2tulipa"

[tool.pyright]
include = ["excel2tulipa"]
ignore = ["tests"]

[tool.ruff]
respect-gitignore = true
exclude = [
    ".direnv",
    ".eggs",
    ".git",
    ".mypy_cache",
    ".nox",
    ".ruff_cache",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "build",
    "dist",
    "scripts",
    "venv",
    "tmp",
    "etc",
    "data",
]

[tool.ruff.lint]
select = [
    "F",  # Pyflakes
    "E",  # pycodestyle (error)
    "W",    # pycodestyle (warning)
    # "C90",  # mccabe
    "I",    # isort
    "D",    # pydocstyle
    # "PL",   # Pylint
    # "PLC",  # Convention
    # "PLE",  # Error
    # "PLR",  # Refactor
    # "PLW",  # Warning
]

ignore = [
    # 'D100',  # Missing module docstring
    # 'D104',  # Missing public package docstring
    # The following list excludes rules irrelevant to the Google style
    'D203',
    'D204',
    'D213',
    'D215',
    'D400',
    'D401',
    'D404',
    'D406',
    'D407',
    'D408',
    'D409',
    'D413',
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F", "I"]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.isort]
known-first-party = ["excel2tulipa"]
force-single-line = true
no-lines-before = ["future","standard-library","third-party","first-party","local-folder"]
